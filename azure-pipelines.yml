# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1ba01563-a8cf-4fca-8166-9fc783c2c96b'
  containerRegistry: 'acrt2cop4qj.azurecr.io'
  dockerfilePath: '**/Dockerfile'  
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acrt2cop4qjbb0a-auth'

  # Agent VM image name
  # vmImageName: 'ubuntu-latest'
  vmImageName: 'Default'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push store-front image
      inputs:
        command: buildAndPush
        repository: src/aks-store-demo/store-front
        dockerfile: store-front/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push product-service image
      inputs:
        command: buildAndPush
        repository: src/aks-store-demo/product-service
        dockerfile: product-service/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push order-service image
      inputs:
        command: buildAndPush
        repository: src/aks-store-demo/order-service
        dockerfile: order-service/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: $(vmImageName)
    environment: 'ColmCharltonaksstoredemo.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy store-front to AKS
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/aks-store-demo/store-front:$(tag)
                $(containerRegistry)/aks-store-demo/product-service:$(tag)
                $(containerRegistry)/aks-store-demo/order-service:$(tag)
